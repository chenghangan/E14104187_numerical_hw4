import numpy as np

def f(x):
    return np.exp(x) * np.sin(4*x)

# 參數設定
a, b = 1, 2
h = 0.1
n = int((b - a) / h)
x = np.linspace(a, b, n+1)

# (a) 複合梯形法
trap_sum = (f(a) + f(b)) / 2
for i in range(1, n):
    trap_sum += f(a + i*h)
trap_result = trap_sum * h

# (b) 複合辛普森法
simp_sum = f(a) + f(b)
for i in range(1, n):
    if i % 2 == 1:
        simp_sum += 4 * f(a + i*h)
    else:
        simp_sum += 2 * f(a + i*h)
simp_result = simp_sum * h / 3

# (c) 複合中點法
mid_sum = 0
for i in range(n):
    mid_sum += f(a + (i + 0.5)*h)
mid_result = mid_sum * h

print(f"(a) 梯形法結果: {trap_result:.6f}")
print(f"(b) 辛普森法結果: {simp_result:.6f}")
print(f"(c) 中點法結果: {mid_result:.6f}")
